plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs'
    id 'com.google.gms.google-services'
}

android {
    namespace 'com.example.apptracking'
    compileSdk 34

    defaultConfig {
        applicationId "com.example.apptracking"
        minSdk 27
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        dataBinding = true
        viewBinding = true
    }
}

dependencies {
    // default
    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.11.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'



    def daggerVersion = "2.48.1"
    def retrofitVersion = "2.9.0"
    def lifecycleVersion = "2.6.2"
    def glideVersion = "4.16.0"
    def coroutinesVersion = "1.7.1"

    // Retrofit2 & okhttp3
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"
    implementation 'com.squareup.okhttp3:logging-interceptor:4.11.0'
    implementation 'com.squareup.okhttp3:okhttp-urlconnection:4.11.0'

    // Dependency Injection
    implementation "com.google.dagger:dagger:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    implementation "com.google.dagger:dagger-android:$daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"

    // Android lifecycle
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
    implementation "androidx.lifecycle:lifecycle-common:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion"

    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:2.7.6"
    implementation "androidx.navigation:navigation-ui-ktx:2.7.6"

    // store local user data
    implementation "androidx.datastore:datastore-preferences:1.0.0"
    implementation "androidx.paging:paging-runtime-ktx:3.2.1"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"

    // MvRx
    implementation "com.airbnb.android:mavericks:3.0.7"
    implementation "com.airbnb.android:mavericks-rxjava2:3.0.7"

    // rx
    implementation "com.jakewharton.rxrelay2:rxrelay:2.1.1"

    //Rxjava
    implementation "com.squareup.retrofit2:adapter-rxjava2:2.9.0"

    // kotlin coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"

    // use Glide for retrieving image from a remote source/URL
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    kapt "com.github.bumptech.glide:compiler:$glideVersion"

    // dot indicator
    implementation "com.tbuonomo:dotsindicator:4.2"

    // get public ip address
    implementation "com.github.chintan369:Ipify-Android:1.0.1"

    // Timber log
    implementation 'com.jakewharton.timber:timber:4.7.1'
}

